Hi and welcome to the machine learning because of grief in New Jersey, so we're going to talk about today is what is machine learning. Well, this is the world and in the world we got humans and computers and what are the main differences between humans and computers? As humans learn from past experience, first computers need to be told what to do to be programs. We follow instructions. Now. The question is: can we get computers tools from experience 2 and the answer is yes, we can, and that's precisely with machine learning is of course, for computers. Past experiences have a name called Data. It'S on the next few minutes. I'M going to show you a few examples in which we can teach the computer how to learn from previous data and, most importantly, I'm going to show you that machine learning is really nothing to fear. So, let's go to the first attempt find housing market on our task is to predict the price of a house given it sucks. So we have a small house that cost $ 70,000. We have a big house that cost $ 160,000 and would like to estimated price of this medium-sized house to here. So how do we do it where the x-axis represents the size of the house and square feet, and the y-axis represent the price of the house in dollars and soda help us out collected some previous date on the form of these blue dots? These are other houses that we've looked at him. We recorded their prices with respect to their size. So in this graph we can see how the small house is priced at $ 70,000, and the big house is priced at $ 160,000 turn off Cypress Mall quiz. What do you think is the best guess for the price of the meeting house, given this data will be $ 8,000 $ 120,000 or $ 190,000 want to help us out. We can see the Blue Points kind of front of line, so we can draw the line that best fits the data on this line. We can say that our best guess for the price of the house is this point over here, which corresponds to $ 120,000. So if you said $ 120,000, that is correct, this method is known as the linear regression are. You may ask: how do you find his line? Well, let's look at a simple example. This three points we're going to try to find the best line that fits through those three points. Obviously, best line subjectable to try to find a line that works well for teaching her, how to do it. Computer in the eyeball, the line so have to get it to draw random line and then see how bad this line is see how bad the line is calculate the error. So we're going to look at the lights of the distances from the line. To the three points and was going to Simply Save the error of this line is to some of those three red length. Now we're going to do is remove line around and see if we can reduce his out. So let's say we move in the direction. Can we calculate the air skin by the yellow distances and realize that we can fix the error? So that's not a good direction to go in the other direction we move. It here got to leave the error. Now it's given by the sum of these three green distances, seed of the earth smaller, so we actually reduced it. So let's say we take that stuff, we're a little closer to our solution. Doing this procedure several times. We will always be decreasing. The error on a silent gun rights to a good solution in the form of the is General procedure is known as gradient descent. Now, in real life we don't want to deal with negative distances course going to a point being on one or the other side of the line. So we do to solve. This is add the square of the distance. From the point of the Lion's Den and this procedure is called, the least squares, DeSantis trying to the central or Mountain Resort, Mount Everest, this mountain, the higher we are, the larger errorist, so descending means reducing the error. So what are we doing? The try to the same amount, it will look at our surroundings and try to figure out which way we can to send more for supper. Here we can go through directions to the right or to the left left, and we going up in Star error to sending. Is equivalent to moving the line down person getting farther from the three points body we go to the right. Instead, then we're actually the sending error is decreasing. This is equivalent to movie lineup words and getting closer to the three points. So we decide to take a step towards right, then we can start this procedure again and again and again until we successfully descend from the mountain is equivalent to reducing the error to find its minimum value, which gives the best line of fit. You can think of linear regressions Angel to look at your data Android the best fitting line or a problem, or even a higher degree or simple the data here. We can actually hear that okay. So, let's move to the next example. In this example, we're going to build an email, spam detection classifier, so something that will tell us if an email is Spam or not, and how do we do this? We just by looking at 3DS data the previous data is Hungry Mouse that has looked at already out of this a hundred emails. We have flag 2500 spam and seven five of the most not spam. Now it's trying to think of features of spam emails may be likely to display and analyze. This features, so one feature could be containing the word. Cheap seems reasonable to think that I'm email containing the word ship is likely to be spam. So, let's Analyze This Clean, we look for the word cheap in all these a hundred emails and find that 20 out of spammers and five out of the non spam ones contain that word. So we can forget about all the rest of the email and focus only on the ones that contain the word cheap, okay, so time for a quiz. Here'S a question based on our data: if an email contains the word cheap, what is the probability of this email? Being spam, is it 40 % 60 % or 80 % well to help us out? We can see that out of the 25 emails with the word. Cheap 20 of them are spam. I need them are not so these form an 80/20 split. So the correct answer with 8080 regret the from analyzing the data. We can conclude a rule, the rules test. If an email contains the word cheap, then we're going to say the probability if it's being spam is 80 %. So we can associate this feature with a probability 80 % and we're going to use it the flag, few messages as spam or not spam. We can also look at other features and try to find her Associated from Billy disable. The Cardinals continue spelling mistake and realized that the probability of an email continue, spelling mistake. Being spam is 70 % or less able to get emails are missing a child and finally, probably leave those being Spanish, 95 %, etcetera, Etc. So now, in future, emails can combine. These features to guess if they're, scam or not algorithm is known as the naive Bayes algorithm. So now another example: we are the app store or Google Play on. Our goal is to recommend apps to users so to each user. We'Re going to try to recommend them after they are most likely download. We have gathered a table of data that we're going to use to make the rules on the table contains six people Detroit 06. We have recorded their gender and their age and the app to download it. So, for example, the first person is a 15 year old female and she downloaded Pokemon go so here's a small quiz between gender and age, which one seems like the more decisive feature for predicting. What app will the users download want to help us out? First, Mystic agenda: you can speak about gender than the females downloaded Pokemon go on. What'S That where's the mail is downloaded, Pokemon go on Snapchat, so not much of a split here. On the other hand, if we look at age, we realize that everybody was under 20 years old. Download Pokemon go. Where is everybody who is 20 or older? Didn'T that's a nice, but so the feature that best fits the data is H there. For a few said age that was correct, so we're going to do is when I had a question here, the question is: are younger than 20. If, yes, then will recommend Pokemon go to you? If not, then we'll see so what happened to your 20 or older, then we look at the gender. It seems like here if your a female you've downloaded what's up recipe, your mail you've downloaded Snapchat. So we had another question here. The question is: are you female or male or female? We were coming what's up your mail in Snapchat when we end up here is with a decision tree and the decisions are given by the question we asked, and this decision tree was built with the data, and now, whenever we have any user, we can forward them To the decision tree and recommending whatever after tree suggested to recommend example, a young person, you recommend them Pokemon go yeah. I know the person you check the gender. If it's a female you recommending what's up it's a meal you're coming in Snapchat, obviously there will always be a tree that perfectly fits our data, but in this class we're going to learn an algorithm which acting will help us find the best-fitting tree to table of Data, okay, so let's go to the next example missions office at University and we're trying to figure out which students to admit we're going to admit them or reject them Basin. Two pieces of information: one is an entrance exam that we provide them the test and the other one is their grades from school. So, for example, here we have student one with scores of 9 out of 10 and 8 out of 10 in the grace, and that accept it. We also have student to what score 7-3 in the test and four in the grades and that student did not get accepted and then it's two incomes in student, three scores of 7 and 6 and the question is: should we accept them or not? So, let's first put them in a grid where the x-axis represents our scoring test and the y-axis represents their great. Are we going to see that student one would live over here in the point with coordinates 98 since their scores? Where is nine and eight and the student to would live here in the point with coordinates and 3/4, since the scores were three and four so hard to see? If we should accept or reject two and three, we should try to find a training that data. So we look at the previous data in the form of all the students we've already accepted or rejected, and it looks like this. A green dots represent students that were previously accepted students that were previously rejected. So what time for quiz based on the previous data, do we sing? Student 3 gets accepted yes or no? How to answer this question? Let'S the closing of the data, the red and green. Seem to be nice, be separated by a line. Here'S a and most of the points over at are green and most of the points under 8 are red, with some exceptions, which makes sense, are over the line and they got accepted, scores are underlined and they didn't get accepted. So we're going to say the deadline is going to be your model, and now every time you get a new student will check the scores and let them at this graph and if the end up over the line with petite Adelle get accepted and at the end Of the line was pretty jacked, so since students 3 has greater 7, + 6 person will end up here at the .76, which is over the line, so we can clear that the students get accepted. So if you said yes, that's the correct answer, this method is known as logistic regression. Now the question is: how do we find this line at Best Cuts the date and to so? Let'S look at simple example: .3 green 3 red and we're going to try to draw a line that separates the green points from the red point and again it computer can't read the line so and just started by drawing a random line like this and give him The sly in this just randomly say that we label the region over the line is green and the region on the line as red. So, just like was in regression we're going to try to see how bad this first line is and a measure of how bad the line is would be. How many points are we miss classifying we're going to call that number misclassified points the error, this line, for example, misclassified two points, one red and one green, so will say that it has two errors so again like within her aggression. What we'll do is move the line around and try to minimize the number of Errors using gradient descent direction. We can see that we start correctly classify one of the boys bring you and if we move it a little more in reality, since we use calculus for a gradient descent method of Errors is not open yet to minimize, but instead something that captures the number of Errors called the lock lost function. The idea behind the function is that it's a function. The large value to the Miss classified points on a small value to the quest 5 Points. So, let's look more carefully this model for accepting or rejecting students and one of the greats, so the student gets accepted going to remodel since they are over here on top of the line. But that seems wrong at very low grades and get accepted what their test score was, so maybe simplistic to think this data can be separated by Just One Lie right. Maybe the real data should look more like this, where the students over here I got a low test score. A little Grace, don't get accepted so now it seems like a line, won't cut the data into so what's the next thing after line, maybe a circle circle? Could work maybe two lines I can work too looks like that works better. So, let's go with that now. The question is how we find these two lions again, we can do it using gradient descent to minimize a similar log last function as before. This is called in neural network. Why is it called the neural network? Well, let's see we have the screen area here buying about two lions. This area can be constructed name, the intersection between the greenery on top of water lines and the green arrow to the right of the other one of the lines. So we're kind of like this and it separates a plane into two regions. And the two knows we get the intersection which of the desired area. The reason why this is called the neural network is because it mimics the behavior of the brain in the brain. We have the neurons which connect to each other and either fire electricity, or they resemble the notes in our draft. We split the Plains region. Fire electricity for given point belongs to one of those regions and one fire. If it doesn't, we can't explain regression Ninja Turtles. Okay, so deeper into the arts training day into two and three red, and there seem to be many lines that can split them. For example, there is a yellow line, and there is this purple light so quiz which of these two lines, do you think us? The data better, the purple one or the yellow one. Well, if you look at the yellow line, seems that it's close to failing its close to two of the points of where the wiggle it a little bit. We would misclassify some of the points. The purple, on the other hand, seems to be nicely spaced as far as we can from all the points, so it seems like the best line is a purple now. The question is: how do we find the purple line for the first time? Survation? Is that we don't really need to worry about these points because they're too far from the boundary, so we can forget about them and only phone. The points that are closed and now we're going to use is not gradient descent, but we're going to be used to be near the main station to find the line that maximizes the distance from the boundary points. This method is called a support, Vector machine. So you can think of support, Vector machines, the surgeon who will see your data and cut before she will carefully look at what's the best way to separate the day and then make the cut okay. So now let's say we have these four points arranged like this, and we want to split them seems like a line. Won'T do the job since they're already over the line and the red ones are on the sides and the green ones are in the middle. So we need to think outside the box. One way to think outside the box is too used to curve like this to split them another one virtue think outside the plane. Think of the points is lying in three-dimensional space. Here are the points over the plain, and here we are next to access the z-axis for the third dimension, and if we can find a way to lift it to bring points, then we'd be able to separate them with a plane. So what seems like a better solution over here or the Flash are here? Well, it turns out that these two are actually the same method. Sorry, if it seems confusing, will get into a little bit more detail later. This method is called used to support, Vector machines. So, let's study one of them in more detail. So it's this one is a .03. This one is 1/2 to 1. This one is 3-0 and what we need is a way to separate the green points from the red points. So the points coordinates are X Y. Then we need an equation on the variables X & Y, the Jesus, large values for the green points and small values for the red points, or vice versa. So quiz which of the following equations, could come to a rescue x, + y 6 x y or ask where the first coordinate Square. This is not an easy question, so that's actually make it table with the values of these equations on each other four points. So here's our table here we have the four points on the top rope. Now you should be all the roast will be one of the functions. So here's a sum x, + y Sharon, the first row - 0 + 3 - is 3 1 +, 2 +, 3, 2. + 133 +, 0. 3. Now, for the second row, the products zero one time, two ways to 2, * 1 is 2 and 3 times. 0 is 0 and for the third row square is a first coordinate Square, so she was squared is 0-1. Squared is 1 2 squared is 4 +, 3. What is 9? So, let's think which one of these equations separates the green and the red points. We look at the sum x, + y, and that gives us 3 at every value, so it doesn't really separate points. You can look at x, squared and that uses different values for every point, but we get zero and nine for the red values and 1 and 4 for the green ones. So this one also doesn't separate them and I will look at the product X x y, and that is a zero for the red values and two for the green ones, so that one seems to do the job right is a function that can tell them apart. The basket question we're going to use, see the products here and now for the red points X Y. We have that the product X Y equals 0 and for the green points we have the product X Y equals 2. What'S the price of zero on a 2-1, so the equation x y equals one will separate them and what is x, y +, 1 + 8 y equals 1 over X and the graph for y was one of her ex's precisely this hyperbola over here. That is the current. We want it, so that is a crown now. We can also see it in 3D. Here we have the point: 0, 3, 1, 2, 2, 1 and 3 0 and we're going to consider them three space. So we're going to take the map that takes the point x y to X Y X, X Y, so where does 0 3 go 0 to 0, 3 0, since the product of 0 and 3 0 want to go to one two to so. It goes all the way up to the third coordinate is the height .21 also goes 2, 1, 2 and .30 goes to 3. 0. 0. So there we out, we can split the Museum of play, so you can think of a sport, Vector machine kernel method. As a surgeon, we saw slightly confused it's an apples and oranges. All of a sudden. She comes up with a great idea if you had consist of moving the apples up and the orange down and then successfully cutting a line through between them. Okay. So, let's move the next example: let's say we have a chain of pizza parlors, a piece of the most Wendy's locations, and so we need to know where are the optimal places to put our 3 pizza parlors? Well, it seems like a house or nicely split into three groups: the red, the blue one, the yellow, so it makes sense to put one pizza parlor in each one of the three clusters, but we're teaching computer how to do this, like computer, just eyeballed the three Clusters we need an algorithm, so here's one of those work: 3 random locations for the pizza, parlors, so they're here where the stars are located, red, blue and yellow. That would make sense to say you should go to the pizza parlor that is closest. In that case, we can look at the map like this, where the yellow houses go to the yellow pizza, parlor, the blue houses, score of the Blue pizza, parlor and the red houses go to the red pizza parlor. Now, where the yellow allocated, you would make a lot of sense to move the yellow pizza parlor to the center of these houses, anything west of blue houses and the red houses. So let's do that? Let'S move every piece of parler to the center of the house. Is that it serves as follows: now look at this blue points that are a lot close to the yellow pizza parlor then to the blue one, so we might as well call them yellow look at these red points there closer to the blue pizza parlor, then, to The red so less color than blue. Now, let's do the step again. Let'S send each pizza parlor to the center of this house is that is serving in this way, but then again, look at these red house. Is there so much closer to the blue pizza parlor? So, let's turn them blue, Anthony pizza, parlor to the center of a cow's. Is it service and now we're pushing optimal solution so starting with random points, and it raining this process help us reach the best locations for the pizza parlors. This algorithm is called. K means clustering, but now, let's just say, we don't want to specify the number of clusters to begin with the different way to group the houses. So say their range like this. It would make sense to save a phone. Two houses are closed. They should be served by the same pizza parlor. So if we go by this rule, let's try to group the houses, let's look at which houses are the closest to each other. It'S this to over here, Subway group 2. Now what are the next two closes houses? It'S these two were here, so we Krypton the next to closest houses. Are these two? So again, a group? The next to closest house. Are these two, so we United groups now the next to Hauser here, so we grab them the next Too Close are here. So we joined the group's the next to closest house. Are here but now, let's just say, that's too big, so all we need to do is specified distance to say this distance is too far when you reached his distance, stop clustering, the houses, and now we are clusters. The song Rhythm is called hierarchical-clustering. So, congratulations in this video with learned many of the main algorithms machine learning. We learn to find you a house prices using linear regression. We learn to detect spam email using. I would like to recommend apps using decision trees to create a model for an admissions office using logistic regression. We learn how to improve them using neural networks. I will learn how to prove it even more using support, Vector machines and finally, we learn how to locate pizza parlors around a city using clustering, algorithms. So many questions man racing had such as are there more algorithms? The answer is yes, which ones to use. That'S not easy, given a dataset, how do we know which algorithm to pick how to compare and evaluate them given to algorithms? How do you know which one is better than another one. set, give me the running time their accuracy, etcetera. Are there examples of the projects? Are there real life. Data that I can get my hands dirty with them? The answer to all these questions are more or in the Udacity machine learning nanodegree. So if this interests you you should take a look at it. Thank you.